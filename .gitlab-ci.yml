stages:
  - build
  - test
  - deploy

.base-job-template:
  image: ubuntu:22.04 
  id_tokens:
    OIDC:
      aud: sts.amazonaws.com
  before_script: 
    ## Required Packages by AWS CLI, Terraform
    - apt-get update || echo 'Failed to run apt-get update'
    - apt-get install -y unzip
    - apt-get install -y wget
    - apt-get install -y curl
    - apt-get install -y git

    ## AWS CLI Installation - version 2.15.41
    - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    - unzip -tq awscliv2.zip
    - unzip -q awscliv2.zip && rm -rf awscliv2.zip
    - ./aws/install
    - aws --version
    - export AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION

build:
  extends: .base-job-template 
  stage: build
  script:
    - export PATH=/usr/local/bin:/usr/local/lib/node_modules/@angular/cli/bin:$PATH
    - apt-get install -y gnupg2
    - apt-get install -y build-essential
    - curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
    - apt-get install -y nodejs 
    - npm install 
    - npm install -g @angular/cli@17.0.10
    - ng build
    - aws s3 sync --delete ./dist/browser/ s3://$AWS_DIST_BUCKET

  rules:
    - if: $CI_COMMIT_BRANCH == "dev"
      when: on_success


deploy:
  stage: deploy
  extends: .base-job-template 
  script:
    - apt-get install -y jq
    - curl "https://s3.amazonaws.com/session-manager-downloads/plugin/latest/ubuntu_64bit/session-manager-plugin.deb" -o "session-manager-plugin.deb"
    - dpkg -i session-manager-plugin.deb
    - session-manager-plugin
    ## Getting IntanceId based on the Tag Values 
    - instance_id=$(aws ssm describe-instance-information  --filters "Key=tag:Name,Values=lta-btds-rq23036-infra-instance" | jq -r '.[][].InstanceId')
    - echo $instance_id

    ## Deleting the HTML Content
    - send_command_id_delete=$(aws ssm send-command --instance-ids $instance_id  --document-name "AWS-RunShellScript"  --comment "delete the html folder content"  --parameters commands="rm -rf /var/www/html/*" | jq -r '.[].CommandId')
    - sleep 10
    - aws ssm get-command-invocation --command-id $send_command_id_delete --instance-id $instance_id | jq

    ## Uploading the Dist Folder
    - send_command_id_upload=$(aws ssm send-command --instance-ids $instance_id  --document-name "AWS-RunShellScript"  --comment "upload dist folder"  --parameters commands="aws s3 sync --delete s3://$AWS_DIST_BUCKET /var/www/html/" | jq -r '.[].CommandId')
    - sleep 10
    - aws ssm get-command-invocation --command-id $send_command_id_upload --instance-id $instance_id | jq

    ## Restart the Lighttpd Service
    - send_command_restart_lighttpd=$(aws ssm send-command --instance-ids $instance_id  --document-name "AWS-RunShellScript"  --comment "restart lighttpd service"  --parameters commands="systemctl restart lighttpd" | jq -r '.[].CommandId')
    - sleep 10
    - echo $send_command_restart_lighttpd
    - aws ssm get-command-invocation --command-id $send_command_restart_lighttpd --instance-id $instance_id | jq

 
  rules:
    - if: $CI_COMMIT_BRANCH == "dev"
      when: on_success


# include:
#   - template: Security/Secret-Detection.gitlab-ci.yml
#   - template: Security/SAST.gitlab-ci.yml
#   - template: Jobs/Code-Quality.gitlab-ci.yml