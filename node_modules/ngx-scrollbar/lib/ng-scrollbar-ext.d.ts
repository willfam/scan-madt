import { OnInit } from '@angular/core';
import { ScrollViewport } from './viewport';
import { NgScrollbarCore } from './ng-scrollbar-core';
import { Scrollbars } from './scrollbars/scrollbars';
import * as i0 from "@angular/core";
export declare class NgScrollbarExt extends NgScrollbarCore implements OnInit {
    private readonly renderer;
    private readonly appRef;
    _scrollbars: Scrollbars;
    /**
     * Selector used to query the viewport element.
     */
    externalViewport: string;
    /**
     * Selector used to query the content wrapper element.
     */
    externalContentWrapper: string;
    /**
     * Selector used to query the spacer element (virtual scroll integration).
     * In the case of integrating the scrollbar with a virtual scroll component,
     * a spacer element is typically created to match the real size of the content.
     * The scrollbar will use the size of this spacer element for calculations instead of the content wrapper size.
     */
    externalSpacer: string;
    /**
     * Skip initializing the viewport and the scrollbar
     * this is used when the component needs to wait for 3rd party library to render
     */
    skipInit: boolean;
    /**
     * Reference to the external viewport directive if used
     */
    customViewport: ScrollViewport;
    ngOnInit(): void;
    private detectExternalSelectors;
    attachScrollbars(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgScrollbarExt, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NgScrollbarExt, "ng-scrollbar[externalViewport]", ["ngScrollbar"], { "externalViewport": { "alias": "externalViewport"; "required": false; }; "externalContentWrapper": { "alias": "externalContentWrapper"; "required": false; }; "externalSpacer": { "alias": "externalSpacer"; "required": false; }; "skipInit": { "alias": "skipInit"; "required": false; }; }, {}, ["customViewport"], ["*"], true, never>;
    static ngAcceptInputType_skipInit: unknown;
}
