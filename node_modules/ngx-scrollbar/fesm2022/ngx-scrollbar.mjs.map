{"version":3,"file":"ngx-scrollbar.mjs","sources":["../../../projects/ngx-scrollbar/src/lib/viewport/scroll-viewport.ts","../../../projects/ngx-scrollbar/src/lib/ng-scrollbar.model.ts","../../../projects/ngx-scrollbar/src/lib/viewport/observer.ts","../../../projects/ngx-scrollbar/src/lib/utils/common.ts","../../../projects/ngx-scrollbar/src/lib/viewport/viewport-adapter.ts","../../../projects/ngx-scrollbar/src/lib/utils/scrollbar-base.ts","../../../projects/ngx-scrollbar/src/lib/ng-scrollbar-core.ts","../../../projects/ngx-scrollbar/src/lib/utils/scrollbar-manager.ts","../../../projects/ngx-scrollbar/src/lib/scrollbar/scrollbar-adapter.ts","../../../projects/ngx-scrollbar/src/lib/utils/pointer-events-adapter.ts","../../../projects/ngx-scrollbar/src/lib/thumb/thumb-adapter.ts","../../../projects/ngx-scrollbar/src/lib/track/track-adapter.ts","../../../projects/ngx-scrollbar/src/lib/track/track.ts","../../../projects/ngx-scrollbar/src/lib/thumb/thumb.ts","../../../projects/ngx-scrollbar/src/lib/button/scrollbar-button.component.ts","../../../projects/ngx-scrollbar/src/lib/button/scrollbar-button.component.html","../../../projects/ngx-scrollbar/src/lib/scrollbar/scrollbar.ts","../../../projects/ngx-scrollbar/src/lib/scrollbars/scrollbars.ts","../../../projects/ngx-scrollbar/src/lib/ng-scrollbar.ts","../../../projects/ngx-scrollbar/src/lib/ng-scrollbar-ext.ts","../../../projects/ngx-scrollbar/src/lib/async-detection.ts","../../../projects/ngx-scrollbar/src/lib/ng-scrollbar.module.ts","../../../projects/ngx-scrollbar/src/ngx-scrollbar.ts"],"sourcesContent":["import { Directive, ElementRef, inject, } from '@angular/core';\r\n\r\n@Directive({\r\n  standalone: true,\r\n  selector: '[scrollViewport]'\r\n})\r\nexport class ScrollViewport {\r\n\r\n  readonly nativeElement: HTMLElement = inject(ElementRef<HTMLElement>).nativeElement;\r\n\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport type ScrollbarAppearance = 'native' | 'compact';\r\nexport type ScrollbarOrientation = 'auto' | 'vertical' | 'horizontal';\r\nexport type ScrollbarVisibility = 'native' | 'hover' | 'visible';\r\nexport type ScrollbarPosition = 'native' | 'invertY' | 'invertX' | 'invertAll';\r\n\r\nexport enum ScrollbarUpdateReason {\r\n  AfterInit = 'AfterInit',\r\n  Resized = 'ResizeObserver'\r\n}\r\n\r\nexport const NG_SCROLLBAR_OPTIONS: InjectionToken<NgScrollbarOptions> = new InjectionToken<NgScrollbarOptions>('NG_SCROLLBAR_OPTIONS');\r\n\r\nexport const NG_SCROLLBAR_POLYFILL: InjectionToken<string> = new InjectionToken<string>('NG_SCROLLBAR_POLYFILL');\r\n\r\nexport interface NgScrollbarOptions {\r\n  /**\r\n   * Sets the scroll axis of the viewport.\r\n   * - 'auto': Scrollbars are displayed for both vertical and horizontal scrolling.\r\n   * - 'vertical': Scrollbars are displayed for vertical scrolling.\r\n   * - 'horizontal': Scrollbars are displayed for horizontal scrolling.\r\n   * Defaults to 'auto'.\r\n   */\r\n  orientation?: ScrollbarOrientation;\r\n\r\n  /**\r\n   * Determines when to show the scrollbar.\r\n   * - 'native': Scrollbar is visible when the viewport is scrollable, similar to native scrollbars.\r\n   * - 'hover': Scrollbars are hidden by default and become visible on scrolling or hovering.\r\n   * - 'visible': Scrollbars are always visible, even if the viewport is not scrollable.\r\n   * Defaults to 'native'.\r\n   */\r\n  visibility?: ScrollbarVisibility;\r\n\r\n  /**\r\n   * Sets the appearance of the scrollbar.\r\n   * - 'native': Scrollbar space is reserved within the viewport, similar to native scrollbars.\r\n   * - 'compact': Scrollbars do not reserve any space and are placed over the viewport.\r\n   * Defaults to 'native'.\r\n   */\r\n  appearance?: ScrollbarAppearance;\r\n\r\n  /**\r\n   * Sets the position of each scrollbar.\r\n   * - 'native': Uses the default position as in native scrollbars.\r\n   * - 'invertY': Inverts the vertical scrollbar position.\r\n   * - 'invertX': Inverts the horizontal scrollbar position.\r\n   * - 'invertAll': Inverts the positions of both vertical and horizontal scrollbars.\r\n   * Defaults to 'native'.\r\n   */\r\n  position?: ScrollbarPosition;\r\n  /** A class forwarded to the scrollbar track element */\r\n  trackClass?: string;\r\n  /** A class forwarded to the scrollbar thumb element */\r\n  thumbClass?: string;\r\n  /** A class forwarded to the scrollbar button element */\r\n  buttonClass?: string;\r\n  /** Scrolling speed when clicking on scrollbar rail */\r\n  trackScrollDuration?: number;\r\n  /** A flag used to enable/disable the scrollbar pointer events */\r\n  disableInteraction?: boolean;\r\n  /** Debounce interval for detecting changes via ResizeObserver */\r\n  sensorThrottleTime?: number;\r\n  /** Whether ResizeObserver is disabled */\r\n  disableSensor?: boolean;\r\n  /** Show scrollbar buttons */\r\n  buttons?: boolean;\r\n  /** A flag used to activate hover effect on the offset area around the scrollbar */\r\n  hoverOffset?: boolean;\r\n}\r\n","import { Observable, Observer, throttleTime } from 'rxjs';\r\nimport { ScrollbarUpdateReason } from '../ng-scrollbar.model';\r\n\r\ninterface ResizeArgs {\r\n  element: HTMLElement;\r\n  throttleDuration: number;\r\n  contentWrapper?: HTMLElement;\r\n}\r\n\r\nexport function resizeObserver({ element, contentWrapper, throttleDuration }: ResizeArgs): Observable<ScrollbarUpdateReason> {\r\n  // The first time the observer is triggered as soon as the element is observed,\r\n  // So we need to differentiate the reason of the event fired\r\n  let reason: ScrollbarUpdateReason = ScrollbarUpdateReason.AfterInit;\r\n\r\n  let resizeObserver: ResizeObserver;\r\n\r\n  const stream: Observable<ScrollbarUpdateReason> = new Observable((observer: Observer<ScrollbarUpdateReason>) => {\r\n    resizeObserver = new ResizeObserver(() => {\r\n      observer.next(reason);\r\n      // After first init event, mark the reason to be a resize from now on.\r\n      reason = ScrollbarUpdateReason.Resized;\r\n    });\r\n    resizeObserver.observe(element);\r\n\r\n    // If a content element has a supporting content scrollbars, observe it!\r\n    if (contentWrapper) {\r\n      resizeObserver.observe(contentWrapper);\r\n    }\r\n\r\n    return () => {\r\n      resizeObserver?.disconnect();\r\n    };\r\n  });\r\n\r\n  return throttleDuration ? stream.pipe(throttleTime(throttleDuration, null, {\r\n    leading: true,\r\n    trailing: true\r\n  })) : stream;\r\n}\r\n\r\n\r\nexport function mutationObserver(element: HTMLElement, throttleDuration: number): Observable<void> {\r\n  let mutationObserver: MutationObserver;\r\n\r\n  const stream: Observable<void> = new Observable((observer: Observer<void>) => {\r\n    mutationObserver = new MutationObserver(() => {\r\n      observer.next();\r\n    });\r\n    mutationObserver.observe(element, { childList: true, subtree: true });\r\n\r\n    return () => {\r\n      mutationObserver?.disconnect();\r\n    };\r\n  });\r\n\r\n  return stream.pipe(throttleTime(throttleDuration, null, {\r\n    leading: true,\r\n    trailing: true\r\n  }));\r\n}\r\n","import { MonoTypeOperatorFunction, tap } from 'rxjs';\r\n\r\nexport function preventSelection(doc: Document): MonoTypeOperatorFunction<PointerEvent> {\r\n  return tap(() => doc.onselectstart = () => false);\r\n}\r\n\r\nexport function enableSelection(doc: Document): MonoTypeOperatorFunction<PointerEvent> {\r\n  return tap(() => doc.onselectstart = null);\r\n}\r\n\r\nexport function stopPropagation(): MonoTypeOperatorFunction<PointerEvent> {\r\n  return tap((e: PointerEvent) => {\r\n    // Have to prevent default to avoid unexpected movement whe you grab object beneath scrollbar #476\r\n    // https://github.com/MurhafSousli/ngx-scrollbar/issues/476\r\n    e.preventDefault();\r\n    e.stopPropagation()\r\n  });\r\n}\r\n\r\nexport type ScrollbarDragging = 'x' | 'y' | 'none';\r\n\r\nexport enum ViewportClasses {\r\n  Viewport = 'ng-scroll-viewport',\r\n  Content = 'ng-scroll-content'\r\n}\r\n\r\nexport interface ViewportBoundaries {\r\n  contentHeight: number;\r\n  contentWidth: number;\r\n  offsetHeight: number;\r\n  offsetWidth: number;\r\n}\r\n\r\nexport type ScrollTimelineFunc = ({ source, axis }: { source: HTMLElement, axis: 'x' | 'y' }) => void;\r\n","import { signal, WritableSignal } from '@angular/core';\r\nimport { ViewportClasses } from '../utils/common';\r\n\r\n/**\r\n * Class representing a viewport adapter.\r\n * Provides methods and properties to interact with a viewport and its content.\r\n */\r\nexport class ViewportAdapter {\r\n\r\n  /**\r\n   * Viewport native element\r\n   */\r\n  nativeElement: HTMLElement;\r\n  /**\r\n   * The element that wraps the content inside the viewport,\r\n   * used to measure the content size and observe its changes.\r\n   */\r\n  contentWrapperElement: HTMLElement;\r\n\r\n  /*\r\n   * A signal that indicates when viewport adapter is initialized\r\n   */\r\n  initialized: WritableSignal<boolean> = signal(false);\r\n\r\n  /** Viewport clientHeight */\r\n  get offsetHeight(): number {\r\n    return this.nativeElement.offsetHeight;\r\n  }\r\n\r\n  /** Viewport clientWidth */\r\n  get offsetWidth(): number {\r\n    return this.nativeElement.offsetWidth;\r\n  }\r\n\r\n  /** Viewport scrollTop */\r\n  get scrollTop(): number {\r\n    return this.nativeElement.scrollTop;\r\n  }\r\n\r\n  /** Viewport scrollLeft */\r\n  get scrollLeft(): number {\r\n    return this.nativeElement.scrollLeft;\r\n  }\r\n\r\n  /** Content height */\r\n  get contentHeight(): number {\r\n    return this.contentWrapperElement.offsetHeight;\r\n  }\r\n\r\n  /** Content width */\r\n  get contentWidth(): number {\r\n    return this.contentWrapperElement.offsetWidth;\r\n  }\r\n\r\n  /** The remaining vertical scrollable distance. */\r\n  get scrollMaxX(): number {\r\n    return this.contentWidth - this.offsetWidth;\r\n  }\r\n\r\n  /** The vertical remaining scrollable distance */\r\n  get scrollMaxY(): number {\r\n    return this.contentHeight - this.offsetHeight;\r\n  }\r\n\r\n  /**\r\n   * Initialize viewport\r\n   */\r\n  init(viewportElement: HTMLElement, contentElement: HTMLElement, spacerElement?: HTMLElement): void {\r\n    // Add viewport class\r\n    viewportElement.classList.add(ViewportClasses.Viewport);\r\n    this.nativeElement = viewportElement;\r\n\r\n    // Add content wrapper class\r\n    contentElement.classList.add(ViewportClasses.Content);\r\n\r\n    // When integrating the scrollbar with virtual scroll, the content wrapper will have fake size,\r\n    // and a spacer element will have the real size\r\n    // Therefore, if spaceElement is provided, it will be observed instead of the content wrapper\r\n    if (spacerElement) {\r\n      // Set relative position on the spacer element to enable the functionality of sticky for the scrollbars\r\n      spacerElement.style.position = 'relative';\r\n      this.contentWrapperElement = spacerElement;\r\n    } else {\r\n      // If spacer is not provided, set it as the content wrapper\r\n      this.contentWrapperElement = contentElement;\r\n    }\r\n    this.initialized.set(true);\r\n  }\r\n\r\n  /**\r\n   * Scrolls the viewport vertically to the specified value.\r\n   */\r\n  scrollYTo(value: number): void {\r\n    this.nativeElement.scrollTop = value;\r\n  }\r\n\r\n  /**\r\n   * Scrolls the viewport horizontally to the specified value.\r\n   */\r\n  scrollXTo(value: number): void {\r\n    this.nativeElement.scrollLeft = value;\r\n  }\r\n}\r\n","import { InjectionToken, Signal, WritableSignal } from '@angular/core';\r\nimport { Direction } from '@angular/cdk/bidi';\r\nimport { SmoothScrollToOptions } from 'ngx-scrollbar/smooth-scroll';\r\nimport { ViewportAdapter } from '../viewport';\r\nimport { ScrollbarDragging, ViewportBoundaries } from './common';\r\n\r\n\r\n/**\r\n * Injection token that can be used to query for a `NgScrollbar`.\r\n * Used primarily to avoid circular imports.\r\n */\r\nexport const NG_SCROLLBAR: InjectionToken<_NgScrollbar> = new InjectionToken<_NgScrollbar>('NG_SCROLLBAR');\r\n\r\nexport interface _NgScrollbar {\r\n  nativeElement: HTMLElement;\r\n  dragging: WritableSignal<ScrollbarDragging>;\r\n  direction: Signal<Direction>;\r\n  trackScrollDuration: number;\r\n  hoverOffset: Signal<boolean>;\r\n  buttons: Signal<boolean>;\r\n  disableSensor: Signal<boolean>;\r\n  sensorThrottleTime: Signal<number>;\r\n  disableInteraction: Signal<boolean>;\r\n  isVerticallyScrollable: Signal<boolean>;\r\n  isHorizontallyScrollable: Signal<boolean>;\r\n  verticalUsed: Signal<boolean>;\r\n  horizontalUsed: Signal<boolean>;\r\n  viewportDimension: Signal<ViewportBoundaries>;\r\n  thumbClass: string;\r\n  trackClass: string;\r\n  buttonClass: string;\r\n\r\n  get viewport(): ViewportAdapter;\r\n\r\n  scrollTo(options: SmoothScrollToOptions): Promise<void>;\r\n}\r\n","import {\r\n  Directive,\r\n  Input,\r\n  Output,\r\n  inject,\r\n  signal,\r\n  effect,\r\n  computed,\r\n  numberAttribute,\r\n  booleanAttribute,\r\n  runInInjectionContext,\r\n  input,\r\n  EventEmitter,\r\n  OnInit,\r\n  AfterViewInit,\r\n  ElementRef,\r\n  NgZone,\r\n  Signal,\r\n  InputSignal,\r\n  Injector,\r\n  WritableSignal,\r\n  EffectCleanupRegisterFn,\r\n  InputSignalWithTransform\r\n} from '@angular/core';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { Direction, Directionality } from '@angular/cdk/bidi';\r\nimport { toSignal } from '@angular/core/rxjs-interop';\r\nimport { Subscription, map, tap } from 'rxjs';\r\nimport {\r\n  SmoothScrollElement,\r\n  SmoothScrollManager,\r\n  SmoothScrollToElementOptions,\r\n  SmoothScrollToOptions\r\n} from 'ngx-scrollbar/smooth-scroll';\r\nimport { Scrollbars } from './scrollbars/scrollbars';\r\nimport { _NgScrollbar, NG_SCROLLBAR } from './utils/scrollbar-base';\r\nimport { resizeObserver, ViewportAdapter } from './viewport';\r\nimport { ScrollbarDragging, ViewportBoundaries } from './utils/common';\r\nimport {\r\n  ScrollbarAppearance,\r\n  ScrollbarPosition,\r\n  ScrollbarOrientation,\r\n  ScrollbarUpdateReason,\r\n  ScrollbarVisibility,\r\n  NgScrollbarOptions,\r\n  NG_SCROLLBAR_OPTIONS\r\n} from './ng-scrollbar.model';\r\n\r\nconst defaultOptions: NgScrollbarOptions = {\r\n  trackClass: '',\r\n  thumbClass: '',\r\n  buttonClass: '',\r\n  orientation: 'auto',\r\n  appearance: 'native',\r\n  visibility: 'native',\r\n  position: 'native',\r\n  trackScrollDuration: 50,\r\n  sensorThrottleTime: 0,\r\n  disableSensor: false,\r\n  disableInteraction: false,\r\n  buttons: false,\r\n  hoverOffset: false\r\n};\r\n\r\ninterface ViewportState {\r\n  verticalUsed: boolean,\r\n  horizontalUsed: boolean,\r\n  isVerticallyScrollable: boolean,\r\n  isHorizontallyScrollable: boolean,\r\n}\r\n\r\n@Directive({\r\n  host: {\r\n    '[class.ng-scrollbar]': 'true',\r\n    '[attr.verticalUsed]': 'verticalUsed()',\r\n    '[attr.horizontalUsed]': 'horizontalUsed()',\r\n    '[attr.isVerticallyScrollable]': 'isVerticallyScrollable()',\r\n    '[attr.isHorizontallyScrollable]': 'isHorizontallyScrollable()',\r\n    '[attr.mobile]': 'isMobile',\r\n    '[attr.dir]': 'direction()',\r\n    '[attr.position]': 'position',\r\n    '[attr.dragging]': 'dragging()',\r\n    '[attr.appearance]': 'appearance',\r\n    '[attr.visibility]': 'visibility()',\r\n    '[attr.orientation]': 'orientation()',\r\n    '[attr.disableInteraction]': 'disableInteraction()'\r\n  },\r\n  providers: [{ provide: NG_SCROLLBAR, useExisting: NgScrollbarCore }]\r\n})\r\nexport abstract class NgScrollbarCore implements _NgScrollbar, OnInit, AfterViewInit {\r\n\r\n  /** Injected options */\r\n  private readonly injectedOptions: NgScrollbarOptions = inject(NG_SCROLLBAR_OPTIONS, { optional: true });\r\n\r\n  /** Combine injected option with default options */\r\n  private readonly options: NgScrollbarOptions = this.injectedOptions ? { ...defaultOptions, ...this.injectedOptions } : defaultOptions;\r\n\r\n  private readonly zone: NgZone = inject(NgZone);\r\n  private readonly platform: Platform = inject(Platform);\r\n  private readonly injector: Injector = inject(Injector);\r\n\r\n  /** A flag that indicates if the platform is mobile */\r\n  readonly isMobile: boolean = this.platform.IOS || this.platform.ANDROID;\r\n  dir: Directionality = inject(Directionality);\r\n\r\n  smoothScroll: SmoothScrollManager = inject(SmoothScrollManager);\r\n\r\n  nativeElement: HTMLElement = inject(ElementRef<HTMLElement>).nativeElement;\r\n\r\n  /**\r\n   * Indicates if the direction is 'ltr' or 'rtl'\r\n   */\r\n  direction: Signal<Direction>;\r\n\r\n  /**\r\n   * Indicates when scrollbar thumb is being dragged\r\n   */\r\n  dragging: WritableSignal<ScrollbarDragging> = signal('none');\r\n\r\n  /**\r\n   * Sets the supported scroll track of the viewport, there are 3 options:\r\n   *\r\n   * - `vertical` Use both vertical and horizontal scrollbar\r\n   * - `horizontal` Use both vertical and horizontal scrollbar\r\n   * - `auto` Use both vertical and horizontal scrollbar\r\n   */\r\n  orientation: InputSignal<ScrollbarOrientation> = input<ScrollbarOrientation>(this.options.orientation);\r\n\r\n  /**\r\n   * When to show the scrollbar, and there are 3 options:\r\n   *\r\n   * - `native` (default) Scrollbar will be visible when viewport is scrollable like with native scrollbar\r\n   * - `hover` Scrollbars are hidden by default, only visible on scrolling or hovering\r\n   * - `always` Scrollbars are always shown even if the viewport is not scrollable\r\n   */\r\n  visibility: InputSignal<ScrollbarVisibility> = input<ScrollbarVisibility>(this.options.visibility);\r\n\r\n  /** Show scrollbar buttons */\r\n  buttons: InputSignalWithTransform<boolean, string | boolean> = input<boolean, string | boolean>(this.options.buttons, {\r\n    transform: booleanAttribute\r\n  });\r\n\r\n  /** Disables scrollbar interaction like dragging thumb and jumping by track click */\r\n  disableInteraction: InputSignalWithTransform<boolean, string | boolean> = input<boolean, string | boolean>(this.options.disableInteraction, {\r\n    transform: booleanAttribute\r\n  });\r\n\r\n  /** Whether ResizeObserver is disabled */\r\n  disableSensor: InputSignalWithTransform<boolean, string | boolean> = input<boolean, string | boolean>(this.options.disableSensor, {\r\n    transform: booleanAttribute\r\n  });\r\n\r\n  /** Throttle interval for detecting changes via ResizeObserver */\r\n  sensorThrottleTime: InputSignal<number> = input<number, number>(this.options.sensorThrottleTime, {\r\n    transform: numberAttribute\r\n  });\r\n\r\n  /** A flag used to activate hover effect on the offset area around the scrollbar */\r\n  hoverOffset: InputSignalWithTransform<boolean, string | boolean> = input<boolean, string | boolean>(this.options.hoverOffset, {\r\n    transform: booleanAttribute\r\n  });\r\n\r\n  viewportDimension: WritableSignal<ViewportBoundaries> = signal({\r\n    contentHeight: 0,\r\n    contentWidth: 0,\r\n    offsetHeight: 0,\r\n    offsetWidth: 0\r\n  });\r\n\r\n  state: Signal<ViewportState> = computed(() => {\r\n    let verticalUsed: boolean = false;\r\n    let horizontalUsed: boolean = false;\r\n    let isVerticallyScrollable: boolean = false;\r\n    let isHorizontallyScrollable: boolean = false;\r\n\r\n    const orientation: ScrollbarOrientation = this.orientation();\r\n    const visibility: ScrollbarVisibility = this.visibility();\r\n    const viewport: ViewportBoundaries = this.viewportDimension();\r\n\r\n    // Check if vertical scrollbar should be displayed\r\n    if (orientation === 'auto' || orientation === 'vertical') {\r\n      isVerticallyScrollable = viewport.contentHeight > viewport.offsetHeight;\r\n      verticalUsed = visibility === 'visible' || isVerticallyScrollable;\r\n    }\r\n    // Check if horizontal scrollbar should be displayed\r\n    if (orientation === 'auto' || orientation === 'horizontal') {\r\n      isHorizontallyScrollable = viewport.contentWidth > viewport.offsetWidth;\r\n      horizontalUsed = visibility === 'visible' || isHorizontallyScrollable;\r\n    }\r\n\r\n    return {\r\n      verticalUsed,\r\n      horizontalUsed,\r\n      isVerticallyScrollable,\r\n      isHorizontallyScrollable,\r\n    };\r\n  });\r\n\r\n  isVerticallyScrollable: Signal<boolean> = computed(() => this.state().isVerticallyScrollable);\r\n  isHorizontallyScrollable: Signal<boolean> = computed(() => this.state().isHorizontallyScrollable);\r\n  verticalUsed: Signal<boolean> = computed(() => this.state().verticalUsed);\r\n  horizontalUsed: Signal<boolean> = computed(() => this.state().horizontalUsed);\r\n\r\n  /** Scroll duration when the scroll track is clicked */\r\n  @Input({ transform: numberAttribute }) trackScrollDuration: number = this.options.trackScrollDuration;\r\n\r\n  /**\r\n   *  Sets the appearance of the scrollbar, there are 2 options:\r\n   *\r\n   * - `native` (default) scrollbar space will be reserved just like with native scrollbar.\r\n   * - `compact` scrollbar doesn't reserve any space, they are placed over the viewport.\r\n   */\r\n  @Input() appearance: ScrollbarAppearance = this.options.appearance;\r\n  /**\r\n   * Sets the position of each scrollbar, there are 4 options:\r\n   *\r\n   * - `native` (Default) Use the default position like in native scrollbar.\r\n   * - `invertY` Inverts vertical scrollbar position\r\n   * - `invertX` Inverts Horizontal scrollbar position\r\n   * - `invertAll` Inverts both scrollbar positions\r\n   */\r\n  @Input() position: ScrollbarPosition = this.options.position;\r\n\r\n  /** A class forwarded to the scrollbar track element */\r\n  @Input() trackClass: string = this.options.trackClass;\r\n  /** A class forwarded to the scrollbar thumb element */\r\n  @Input() thumbClass: string = this.options.thumbClass;\r\n  /** A class forwarded to the scrollbar button element */\r\n  @Input() buttonClass: string = this.options.thumbClass;\r\n\r\n  /** Steam that emits when scrollbar is initialized */\r\n  @Output() afterInit: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /** Steam that emits when scrollbar is updated */\r\n  @Output() afterUpdate: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /** Resize observer subscription */\r\n  private sizeChangeSub: Subscription;\r\n\r\n  /** Viewport adapter instance */\r\n  viewport: ViewportAdapter = new ViewportAdapter();\r\n\r\n  /** The scrollbars component instance used for testing purpose */\r\n  abstract _scrollbars: Scrollbars;\r\n\r\n  ngOnInit(): void {\r\n    runInInjectionContext(this.injector, () => {\r\n      // The direction signal cannot be initialized in the constructor\r\n      // Because it initially returns 'ltr' even if dir.value is 'rtl`, the map function here is crucial\r\n      this.direction = toSignal<Direction, Direction>(this.dir.change.pipe(map(() => this.dir.value)), { initialValue: this.dir.value });\r\n\r\n      effect((onCleanup: EffectCleanupRegisterFn) => {\r\n        // Check whether sensor should be enabled\r\n        if (this.disableSensor()) {\r\n          // If sensor is disabled update manually\r\n          this.sizeChangeSub?.unsubscribe();\r\n        } else {\r\n          if (this.platform.isBrowser && this.viewport.initialized()) {\r\n            this.sizeChangeSub?.unsubscribe();\r\n\r\n            this.zone.runOutsideAngular(() => {\r\n              this.sizeChangeSub = resizeObserver({\r\n                element: this.viewport.nativeElement,\r\n                contentWrapper: this.viewport.contentWrapperElement,\r\n                throttleDuration: this.sensorThrottleTime()\r\n              }).pipe(\r\n                tap((reason: ScrollbarUpdateReason) => this.update(reason))\r\n              ).subscribe();\r\n            });\r\n          }\r\n        }\r\n\r\n        onCleanup(() => this.sizeChangeSub?.unsubscribe());\r\n      });\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // If sensor is disabled, update to evaluate the state\r\n    if (this.platform.isBrowser && this.disableSensor()) {\r\n      // In case of 3rd party library, need to wait for content to be rendered\r\n      requestAnimationFrame(() => {\r\n        this.update(ScrollbarUpdateReason.AfterInit);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update local state and the internal scrollbar controls\r\n   */\r\n  update(reason?: ScrollbarUpdateReason): void {\r\n    this.updateCSSVariables();\r\n\r\n    this.zone.run(() => {\r\n      this.viewportDimension.set({\r\n        contentHeight: this.viewport.contentHeight,\r\n        contentWidth: this.viewport.contentWidth,\r\n        offsetHeight: this.viewport.offsetHeight,\r\n        offsetWidth: this.viewport.offsetWidth\r\n      });\r\n\r\n      // After the upgrade to Angular 18, the effect functions in the inner directives are executed after \"afterInit\" is emitted,\r\n      // causing the tests to fail. A tiny delay is needed before emitting to the output as a workaround.\r\n      if (reason === ScrollbarUpdateReason.AfterInit) {\r\n        this.afterInit.emit();\r\n      } else {\r\n        this.afterUpdate.emit();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Smooth scroll functions\r\n   */\r\n  scrollTo(options: SmoothScrollToOptions): Promise<void> {\r\n    return this.smoothScroll.scrollTo(this.viewport!.nativeElement, options);\r\n  }\r\n\r\n  /**\r\n   * Scroll to element by reference or selector\r\n   */\r\n  scrollToElement(target: SmoothScrollElement, options?: SmoothScrollToElementOptions): Promise<void> {\r\n    return this.smoothScroll.scrollToElement(this.viewport.nativeElement, target, options);\r\n  }\r\n\r\n  /**\r\n   * Update Essential CSS variables\r\n   */\r\n  private updateCSSVariables(): void {\r\n    this.nativeElement.style.setProperty('--content-height', `${ this.viewport.contentHeight }`);\r\n    this.nativeElement.style.setProperty('--content-width', `${ this.viewport.contentWidth }`);\r\n    this.nativeElement.style.setProperty('--viewport-height', `${ this.viewport.offsetHeight }`);\r\n    this.nativeElement.style.setProperty('--viewport-width', `${ this.viewport.offsetWidth }`);\r\n  }\r\n}\r\n","import { Injectable, inject, signal, WritableSignal, PLATFORM_ID } from '@angular/core';\r\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\r\nimport { NG_SCROLLBAR_POLYFILL } from '../ng-scrollbar.model';\r\nimport { ScrollTimelineFunc } from './common';\r\n\r\n// This CDN link for a modified version of the polyfill to fix firefox bug https://github.com/MurhafSousli/ngx-scrollbar/issues/615\r\nconst scrollTimelinePolyfillUrl: string = 'https://cdn.statically.io/gist/MurhafSousli/c852b6a672069396953f06ddd4b64620/raw/ef55db72e2abb7bc002ed79f4ad4cf408bfdb72f/scroll-timeline-lite.js';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ScrollbarManager {\r\n\r\n  private readonly isBrowser: boolean = isPlatformBrowser(inject(PLATFORM_ID));\r\n\r\n  readonly _polyfillUrl: string = inject(NG_SCROLLBAR_POLYFILL, { optional: true }) || scrollTimelinePolyfillUrl;\r\n\r\n  readonly document: Document = inject(DOCUMENT);\r\n\r\n  readonly window: Window = this.document.defaultView;\r\n\r\n  readonly scrollTimelinePolyfill: WritableSignal<ScrollTimelineFunc> = signal(null);\r\n\r\n  constructor() {\r\n    if (this.isBrowser && (!this.window['ScrollTimeline'] || !CSS.supports('animation-timeline', 'scroll()'))) {\r\n      this.initPolyfill();\r\n    }\r\n  }\r\n\r\n  async initPolyfill(): Promise<void> {\r\n    try {\r\n      // Create a script element\r\n      const script: HTMLScriptElement = this.document.createElement('script');\r\n      script.src = this._polyfillUrl;\r\n\r\n      // Wait for the script to load\r\n      await new Promise<Event>((resolve, reject) => {\r\n        script.onload = resolve;\r\n        script.onerror = reject;\r\n        this.document.head.appendChild(script);\r\n      });\r\n\r\n      // Once loaded, access and execute the function attached to the window object\r\n      if (this.window['ScrollTimeline']) {\r\n        this.scrollTimelinePolyfill.set(this.window['ScrollTimeline']);\r\n      } else {\r\n        console.error('[NgScrollbar]: ScrollTimeline is not attached to the window object.');\r\n      }\r\n    } catch (error) {\r\n      console.error('[NgScrollbar]: Error loading ScrollTimeline script:', error);\r\n    }\r\n  }\r\n}\r\n","import { Directive, inject, InjectionToken } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { NG_SCROLLBAR, _NgScrollbar } from '../utils/scrollbar-base';\r\n\r\nexport const SCROLLBAR_CONTROL: InjectionToken<ScrollbarAdapter> = new InjectionToken<ScrollbarAdapter>('SCROLLBAR_CONTROL');\r\n\r\n@Directive()\r\nexport abstract class ScrollbarAdapter {\r\n\r\n  abstract readonly clientRectProperty: 'left' | 'top';\r\n\r\n  abstract readonly sizeProperty: 'offsetWidth' | 'offsetHeight';\r\n\r\n  // Returns either 'clientX' or 'clientY' coordinate of the pointer relative to the viewport\r\n  abstract readonly clientProperty: 'clientX' | 'clientY';\r\n\r\n  // Returns either 'offsetX' or 'offsetY' coordinate of the pointer relative to the edge of the element\r\n  abstract readonly offsetProperty: 'offsetX' | 'offsetY'\r\n\r\n  // Return axis\r\n  abstract readonly axis: 'x' | 'y';\r\n\r\n  // Returns viewport scroll max\r\n  abstract get viewportScrollMax(): number;\r\n\r\n  // Returns viewport offset\r\n  abstract get viewportScrollOffset(): number;\r\n\r\n  // Host component reference\r\n  readonly cmp: _NgScrollbar = inject(NG_SCROLLBAR);\r\n\r\n  abstract scrollTo(value: number, duration: number): Observable<void>;\r\n\r\n  abstract instantScrollTo(value: number, scrollMax?: number): void;\r\n}\r\n","import { Directive, effect, inject, ElementRef, NgZone, EffectCleanupRegisterFn } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { _NgScrollbar, NG_SCROLLBAR } from '../utils/scrollbar-base';\r\nimport { SCROLLBAR_CONTROL, ScrollbarAdapter } from '../scrollbar/scrollbar-adapter';\r\n\r\n@Directive()\r\nexport abstract class PointerEventsAdapter {\r\n\r\n  // Reference to the NgScrollbar component\r\n  protected readonly cmp: _NgScrollbar = inject(NG_SCROLLBAR);\r\n\r\n  // Reference to the Scrollbar control component\r\n  protected readonly control: ScrollbarAdapter = inject(SCROLLBAR_CONTROL);\r\n\r\n  // Reference to the Document element\r\n  protected readonly document: Document = inject(DOCUMENT);\r\n\r\n  // Reference to angular zone\r\n  protected readonly zone: NgZone = inject(NgZone);\r\n\r\n  // The native element of the directive\r\n  readonly nativeElement: HTMLElement = inject(ElementRef<HTMLElement>).nativeElement;\r\n\r\n  // Pointer events subscription (made public for testing purpose)\r\n  _pointerEventsSub: Subscription;\r\n\r\n  abstract get pointerEvents(): Observable<PointerEvent>;\r\n\r\n  constructor() {\r\n    effect((onCleanup: EffectCleanupRegisterFn) => {\r\n      if (this.cmp.disableInteraction()) {\r\n        this._pointerEventsSub?.unsubscribe();\r\n      } else {\r\n        this.zone.runOutsideAngular(() => {\r\n          this._pointerEventsSub = this.pointerEvents.subscribe();\r\n        });\r\n      }\r\n\r\n      onCleanup(() => this._pointerEventsSub?.unsubscribe());\r\n    });\r\n  }\r\n}\r\n","import { Directive, inject, effect } from '@angular/core';\r\nimport { Observable, of, fromEvent, map, takeUntil, tap, switchMap } from 'rxjs';\r\nimport {\r\n  ScrollbarDragging,\r\n  ScrollTimelineFunc,\r\n  stopPropagation,\r\n  enableSelection,\r\n  preventSelection\r\n} from '../utils/common';\r\nimport { ScrollbarManager } from '../utils/scrollbar-manager';\r\nimport { TrackAdapter } from '../track/track-adapter';\r\nimport { PointerEventsAdapter } from '../utils/pointer-events-adapter';\r\n\r\n@Directive()\r\nexport abstract class ThumbAdapter extends PointerEventsAdapter {\r\n\r\n  protected readonly manager: ScrollbarManager = inject(ScrollbarManager);\r\n\r\n  private readonly track: TrackAdapter = inject(TrackAdapter);\r\n\r\n  // The animation reference used for enabling the polyfill on Safari and Firefox.\r\n  _animation: Animation;\r\n\r\n  // Returns thumb size\r\n  get size(): number {\r\n    return this.nativeElement[this.control.sizeProperty];\r\n  }\r\n\r\n  // The maximum space available for scrolling.\r\n  get trackMax(): number {\r\n    return this.track.size - this.size;\r\n  }\r\n\r\n  /**\r\n   * Stream that emits the 'scrollTo' position when a scrollbar thumb element is dragged\r\n   * This function is called by thumb drag event using viewport or scrollbar pointer events\r\n   */\r\n  get pointerEvents(): Observable<PointerEvent> {\r\n    return fromEvent<PointerEvent>(this.nativeElement, 'pointerdown').pipe(\r\n      stopPropagation(),\r\n      preventSelection(this.document),\r\n      switchMap((e: PointerEvent) => {\r\n        let startTrackMax: number;\r\n        let startScrollMax: number;\r\n\r\n        const dragStart: Observable<PointerEvent> = of<PointerEvent>(e).pipe(\r\n          tap(() => {\r\n            // Capture scrollMax and trackMax once\r\n            startTrackMax = this.trackMax;\r\n            startScrollMax = this.control.viewportScrollMax;\r\n            this.setDragging(this.control.axis);\r\n          }),\r\n        );\r\n\r\n        const dragging: Observable<PointerEvent> = fromEvent<PointerEvent>(this.document, 'pointermove').pipe(stopPropagation());\r\n\r\n        const dragEnd: Observable<PointerEvent> = fromEvent<PointerEvent>(this.document, 'pointerup', { capture: true }).pipe(\r\n          stopPropagation(),\r\n          enableSelection(this.document),\r\n          tap(() => this.setDragging('none'))\r\n        );\r\n\r\n        return dragStart.pipe(\r\n          map((startEvent: PointerEvent) => startEvent[this.control.offsetProperty]),\r\n          switchMap((startOffset: number) => dragging.pipe(\r\n            map((moveEvent: PointerEvent) => moveEvent[this.control.clientProperty]),\r\n            // Calculate how far the pointer is from the top/left of the scrollbar (minus the dragOffset).\r\n            map((moveClient: number) => moveClient - this.track.offset),\r\n            map((trackRelativeOffset: number) => startScrollMax * (trackRelativeOffset - startOffset) / startTrackMax),\r\n            tap((scrollPosition: number) => this.control.instantScrollTo(scrollPosition, startScrollMax)),\r\n            takeUntil(dragEnd)\r\n          ) as Observable<PointerEvent>)\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  constructor() {\r\n    effect(() => {\r\n      const script: ScrollTimelineFunc = this.manager.scrollTimelinePolyfill();\r\n      if (script && !this._animation) {\r\n        this._animation = startPolyfill(script, this.nativeElement, this.cmp.viewport.nativeElement, this.control.axis);\r\n      }\r\n    });\r\n    super();\r\n  }\r\n\r\n  private setDragging(value: ScrollbarDragging): void {\r\n    this.zone.run(() => this.cmp.dragging.set(value));\r\n  }\r\n}\r\n\r\nfunction startPolyfill(ScrollTimeline: ScrollTimelineFunc, element: HTMLElement, source: HTMLElement, axis: 'x' | 'y'): Animation {\r\n  return element.animate(\r\n    {\r\n      translate: [\r\n        'var(--_scrollbar-thumb-transform-from)',\r\n        'var(--_scrollbar-thumb-transform-to)'\r\n      ]\r\n    },\r\n    {\r\n      fill: 'both',\r\n      easing: 'linear',\r\n      timeline: new ScrollTimeline({ source, axis })\r\n    } as unknown\r\n  );\r\n}\r\n","import { ContentChild, Directive, effect, EffectCleanupRegisterFn } from '@angular/core';\r\nimport {\r\n  Observable,\r\n  Subscription,\r\n  tap,\r\n  map,\r\n  delay,\r\n  merge,\r\n  startWith,\r\n  switchMap,\r\n  fromEvent,\r\n  takeUntil,\r\n  takeWhile,\r\n  EMPTY\r\n} from 'rxjs';\r\nimport { enableSelection, preventSelection, stopPropagation } from '../utils/common';\r\nimport { ThumbAdapter } from '../thumb/thumb-adapter';\r\nimport { resizeObserver } from '../viewport';\r\nimport { PointerEventsAdapter } from '../utils/pointer-events-adapter';\r\n\r\n@Directive()\r\nexport abstract class TrackAdapter extends PointerEventsAdapter {\r\n\r\n  // Subscription for resize observer\r\n  private sizeChangeSub: Subscription;\r\n\r\n  // The current position of the mouse during track dragging\r\n  private currMousePosition: number;\r\n\r\n  // The direction of scroll when the track area is clicked\r\n  protected scrollDirection: 'forward' | 'backward';\r\n\r\n  // The maximum scroll position until the end is reached\r\n  protected scrollMax: number;\r\n\r\n  // The CSS variable name used to set the length value\r\n  protected abstract readonly cssLengthProperty: string;\r\n\r\n  // Returns viewport scroll size\r\n  protected abstract get viewportScrollSize(): number;\r\n\r\n  // Returns viewport client size\r\n  protected get viewportSize(): number {\r\n    return this.cmp.viewport[this.control.sizeProperty];\r\n  }\r\n\r\n  // Get track client rect\r\n  protected get clientRect(): DOMRect {\r\n    return this.nativeElement.getBoundingClientRect();\r\n  }\r\n\r\n  // Returns the scroll position relative to the track\r\n  protected abstract getCurrPosition(): number;\r\n\r\n  // Returns the dragging direction forward or backward\r\n  protected abstract getScrollDirection(position: number): 'forward' | 'backward';\r\n\r\n  // Function that scrolls to the given position\r\n  protected abstract scrollTo(position: number): Observable<void>;\r\n\r\n  // Scrollbar track offset\r\n  get offset(): number {\r\n    return this.clientRect[this.control.clientRectProperty];\r\n  }\r\n\r\n  // Scrollbar track length\r\n  get size(): number {\r\n    return this.nativeElement[this.control.sizeProperty];\r\n  }\r\n\r\n  // Observable for track dragging events\r\n  get pointerEvents(): Observable<PointerEvent> {\r\n    // Observable streams for pointer events\r\n    const pointerDown$: Observable<PointerEvent> = fromEvent<PointerEvent>(this.nativeElement, 'pointerdown').pipe(\r\n      stopPropagation(),\r\n      preventSelection(this.document)\r\n    );\r\n    const pointerUp$: Observable<PointerEvent> = fromEvent<PointerEvent>(this.document, 'pointerup', { passive: true }).pipe(\r\n      enableSelection(this.document)\r\n    );\r\n\r\n    const pointerEnter$: Observable<boolean> = fromEvent<PointerEvent>(this.nativeElement, 'pointerover', { passive: true }).pipe(\r\n      // When mouse is out and enters again, must set the current position first\r\n      tap((e: PointerEvent) => this.currMousePosition = e[this.control.offsetProperty]),\r\n      map(() => true)\r\n    );\r\n    const pointerLeave$: Observable<boolean> = fromEvent<PointerEvent>(this.nativeElement, 'pointerout', { passive: true }).pipe(\r\n      map(() => false)\r\n    );\r\n\r\n    const pointerOver$: Observable<boolean> = merge(pointerEnter$, pointerLeave$).pipe(startWith(true));\r\n\r\n    // Keep track of current mouse location while dragging\r\n    const pointerMove$: Observable<PointerEvent> = fromEvent<PointerEvent>(this.nativeElement, 'pointermove', { passive: true }).pipe(\r\n      tap((e: PointerEvent) => this.currMousePosition = e[this.control.offsetProperty])\r\n    );\r\n\r\n    return pointerDown$.pipe(\r\n      switchMap((startEvent: PointerEvent) => {\r\n        // Track pointer location while dragging\r\n        pointerMove$.pipe(takeUntil(pointerUp$)).subscribe();\r\n\r\n        return this.onTrackFirstClick(startEvent).pipe(\r\n          delay(200),\r\n          switchMap(() => {\r\n            // Otherwise, activate pointermove and pointerout events and switch to ongoing scroll calls\r\n            return pointerOver$.pipe(\r\n              switchMap((over: boolean) => {\r\n                const currDirection: 'forward' | 'backward' = this.getScrollDirection(this.currMousePosition);\r\n                const sameDirection: boolean = this.scrollDirection === currDirection;\r\n                // If mouse is out the track pause the scroll calls, otherwise keep going\r\n                return (over && sameDirection) ? this.onTrackOngoingMousedown() : EMPTY;\r\n              }),\r\n            ) as Observable<PointerEvent>;\r\n          }),\r\n          takeUntil(pointerUp$),\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  // Reference to the ThumbAdapter component\r\n  @ContentChild(ThumbAdapter) protected thumb: ThumbAdapter;\r\n\r\n  constructor() {\r\n    effect((onCleanup: EffectCleanupRegisterFn) => {\r\n      if (this.cmp.disableSensor()) {\r\n        this.update();\r\n        this.sizeChangeSub?.unsubscribe();\r\n      } else {\r\n        this.zone.runOutsideAngular(() => {\r\n          // Update styles with real track size\r\n          this.sizeChangeSub = resizeObserver({\r\n            element: this.nativeElement,\r\n            throttleDuration: this.cmp.sensorThrottleTime()\r\n          }).pipe(\r\n            tap(() => this.update())\r\n          ).subscribe();\r\n        });\r\n      }\r\n\r\n      onCleanup(() => this.sizeChangeSub?.unsubscribe());\r\n    });\r\n    super();\r\n  }\r\n\r\n  protected abstract getScrollForwardStep(): number;\r\n\r\n  protected abstract getScrollBackwardStep(): number;\r\n\r\n  private update(): void {\r\n    this.cmp.nativeElement.style.setProperty(this.cssLengthProperty, `${ this.size }`);\r\n  }\r\n\r\n  /**\r\n   *  Callback when mouse is first clicked on the track\r\n   */\r\n  onTrackFirstClick(e: PointerEvent): Observable<void> {\r\n    // Initialize variables and determine scroll direction\r\n    this.currMousePosition = e[this.control.offsetProperty];\r\n    this.scrollDirection = this.getScrollDirection(this.currMousePosition);\r\n    this.scrollMax = this.control.viewportScrollMax;\r\n    return this.scrollTo(this.nextStep());\r\n  }\r\n\r\n  private nextStep(): number {\r\n    // Check which direction should the scroll go (forward or backward)\r\n    if (this.scrollDirection === 'forward') {\r\n      // Scroll forward\r\n      const scrollForwardIncrement: number = this.getScrollForwardStep();\r\n\r\n      // Check if the incremental position is bigger than the scroll max\r\n      if (scrollForwardIncrement >= this.scrollMax) {\r\n        return this.scrollMax;\r\n      }\r\n      return scrollForwardIncrement;\r\n    }\r\n    // Scroll backward\r\n    const scrollBackwardIncrement: number = this.getScrollBackwardStep();\r\n\r\n    if (scrollBackwardIncrement <= 0) {\r\n      return 0;\r\n    }\r\n    return scrollBackwardIncrement;\r\n  }\r\n\r\n  /**\r\n   * Callback when mouse is still down on the track\r\n   * Incrementally scrolls towards target position until reached\r\n   */\r\n  onTrackOngoingMousedown(): Observable<unknown> {\r\n    const position: number = this.nextStep();\r\n    return this.scrollTo(position).pipe(\r\n      takeWhile(() => !this.isReached(position)),\r\n      switchMap(() => this.onTrackOngoingMousedown())\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns a flag that determines whether the scroll from the given position is the final step or not\r\n   */\r\n  private isReached(position: number): boolean {\r\n    if (this.scrollDirection === 'forward') {\r\n      return position >= this.scrollMax;\r\n    }\r\n    return position <= 0;\r\n  }\r\n}\r\n","import { Directive, effect } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { fromPromise } from 'rxjs/internal/observable/innerFrom';\r\nimport { TrackAdapter } from './track-adapter';\r\n\r\n@Directive({\r\n  standalone: true,\r\n  selector: '[scrollbarTrackX]',\r\n  providers: [{ provide: TrackAdapter, useExisting: TrackXDirective }]\r\n})\r\nexport class TrackXDirective extends TrackAdapter {\r\n\r\n  protected readonly cssLengthProperty: string = '--track-x-length';\r\n\r\n  protected get viewportScrollSize(): number {\r\n    return this.cmp.viewport.contentWidth;\r\n  }\r\n\r\n  getCurrPosition: () => number;\r\n\r\n  getScrollDirection: (position: number) => 'forward' | 'backward';\r\n\r\n  constructor() {\r\n    effect(() => {\r\n      if (this.cmp.direction() === 'rtl') {\r\n        this.getCurrPosition = (): number => {\r\n          const offset: number = this.viewportScrollSize - this.viewportSize - this.control.viewportScrollOffset;\r\n          return offset * this.size / this.viewportScrollSize;\r\n        };\r\n        this.getScrollDirection = (position: number): 'forward' | 'backward' => {\r\n          return position < this.getCurrPosition() ? 'forward' : 'backward';\r\n        };\r\n      } else {\r\n        this.getCurrPosition = (): number => {\r\n          return this.control.viewportScrollOffset * this.size / this.viewportScrollSize\r\n        };\r\n        this.getScrollDirection = (position: number): 'forward' | 'backward' => {\r\n          return position > this.getCurrPosition() ? 'forward' : 'backward';\r\n        };\r\n      }\r\n    });\r\n    super();\r\n  }\r\n\r\n  protected scrollTo(start: number): Observable<void> {\r\n    return fromPromise(this.cmp.scrollTo({ start, duration: this.cmp.trackScrollDuration }));\r\n  }\r\n\r\n  protected getScrollForwardStep(): number {\r\n    return this.control.viewportScrollOffset + this.viewportSize;\r\n  }\r\n\r\n  protected getScrollBackwardStep(): number {\r\n    return this.control.viewportScrollOffset - this.viewportSize;\r\n  }\r\n}\r\n\r\n@Directive({\r\n  standalone: true,\r\n  selector: '[scrollbarTrackY]',\r\n  providers: [{ provide: TrackAdapter, useExisting: TrackYDirective }]\r\n})\r\nexport class TrackYDirective extends TrackAdapter {\r\n\r\n  protected readonly cssLengthProperty: string = '--track-y-length';\r\n\r\n  protected get viewportScrollSize(): number {\r\n    return this.cmp.viewport.contentHeight;\r\n  }\r\n\r\n  protected getCurrPosition(): number {\r\n    return this.control.viewportScrollOffset * this.size / this.viewportScrollSize;\r\n  }\r\n\r\n  protected getScrollDirection(position: number): 'forward' | 'backward' {\r\n    return position > this.getCurrPosition() ? 'forward' : 'backward';\r\n  }\r\n\r\n  protected scrollTo(top: number): Observable<void> {\r\n    return fromPromise(this.cmp.scrollTo({ top, duration: this.cmp.trackScrollDuration }));\r\n  }\r\n\r\n  protected getScrollForwardStep(): number {\r\n    return this.control.viewportScrollOffset + this.viewportSize;\r\n  }\r\n\r\n  protected getScrollBackwardStep(): number {\r\n    return this.control.viewportScrollOffset - this.viewportSize;\r\n  }\r\n}\r\n","import { Directive } from '@angular/core';\r\nimport { ThumbAdapter } from './thumb-adapter';\r\n\r\n@Directive({\r\n  standalone: true,\r\n  selector: '[scrollbarThumbX]',\r\n  providers: [{ provide: ThumbAdapter, useExisting: ThumbXDirective }]\r\n})\r\nexport class ThumbXDirective extends ThumbAdapter {\r\n}\r\n\r\n@Directive({\r\n  standalone: true,\r\n  selector: '[scrollbarThumbY]',\r\n  providers: [{ provide: ThumbAdapter, useExisting: ThumbYDirective }]\r\n})\r\nexport class ThumbYDirective extends ThumbAdapter {\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  inject,\r\n  effect,\r\n  runInInjectionContext,\r\n  OnInit,\r\n  Injector,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { Direction } from '@angular/cdk/bidi';\r\nimport {\r\n  Observable,\r\n  tap,\r\n  delay,\r\n  merge,\r\n  switchMap,\r\n  fromEvent,\r\n  takeUntil,\r\n  interval,\r\n  takeWhile,\r\n  animationFrameScheduler\r\n} from 'rxjs';\r\nimport { enableSelection, preventSelection, stopPropagation } from '../utils/common';\r\nimport { PointerEventsAdapter } from '../utils/pointer-events-adapter';\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'button[scrollbarButton]',\r\n  templateUrl: './scrollbar-button.component.html',\r\n  styleUrl: './scrollbar-button.component.scss',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ScrollbarButton extends PointerEventsAdapter implements OnInit {\r\n\r\n  private readonly injector: Injector = inject(Injector);\r\n\r\n  @Input({ required: true }) scrollbarButton: 'top' | 'bottom' | 'start' | 'end';\r\n  @Input({ required: true }) scrollDirection: 'forward' | 'backward';\r\n\r\n  private afterFirstClickDelay: number = 120;\r\n  private firstClickDuration: number = 100;\r\n  private scrollBy: number = 50;\r\n  private onGoingScrollBy: number = 12;\r\n\r\n  private nextStep: (scrollBy: number, offset: number, scrollMax: number) => number;\r\n  private canScroll: (offset: number, scrollMax: number) => boolean;\r\n\r\n  // canScroll function can work for y-axis and x-axis for both LTR and RTL directions\r\n  private readonly canScrollFunc: Record<'forward' | 'backward', (offset: number, scrollMax?: number) => boolean> = {\r\n    forward: (scrollOffset: number, scrollMax: number): boolean => scrollOffset < scrollMax,\r\n    backward: (scrollOffset: number): boolean => scrollOffset > 0\r\n  }\r\n\r\n  private scrollStepFunc: Record<'forward' | 'backward', (scrollBy: number, offset: number, scrollMax: number) => number> = {\r\n    forward: (scrollBy: number, offset: number) => offset + scrollBy,\r\n    backward: (scrollBy: number, offset: number) => offset - scrollBy\r\n  };\r\n\r\n  private readonly horizontalScrollStepFunc: Record<'ltr' | 'rtl', typeof this.scrollStepFunc> = {\r\n    rtl: {\r\n      forward: (scrollBy: number, offset: number, scrollMax: number) => scrollMax - offset - scrollBy,\r\n      backward: (scrollBy: number, offset: number, scrollMax: number) => scrollMax - offset + scrollBy\r\n    },\r\n    ltr: this.scrollStepFunc\r\n  }\r\n\r\n  get pointerEvents(): Observable<PointerEvent> {\r\n    const pointerDown$: Observable<PointerEvent> = fromEvent<PointerEvent>(this.nativeElement, 'pointerdown').pipe(\r\n      stopPropagation(),\r\n      preventSelection(this.document)\r\n    );\r\n    const pointerUp$: Observable<PointerEvent> = fromEvent<PointerEvent>(this.document, 'pointerup', { passive: true }).pipe(\r\n      enableSelection(this.document)\r\n    );\r\n\r\n    const pointerLeave$: Observable<PointerEvent> = fromEvent<PointerEvent>(this.nativeElement, 'pointerleave', { passive: true });\r\n\r\n    // Combine pointerup and pointerleave events into one stream\r\n    const pointerUpOrLeave$: Observable<PointerEvent> = merge(pointerUp$, pointerLeave$);\r\n\r\n    return pointerDown$.pipe(\r\n      switchMap(() => this.firstScrollStep().pipe(\r\n        delay(this.afterFirstClickDelay),\r\n        switchMap(() => this.onOngoingPointerdown()),\r\n        takeUntil(pointerUpOrLeave$),\r\n      ))\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Get the canScroll function according to scroll direction (forward/backward)\r\n    this.canScroll = this.canScrollFunc[this.scrollDirection];\r\n\r\n    if (this.control.axis === 'x') {\r\n      runInInjectionContext(this.injector, () => {\r\n        effect(() => {\r\n          const dir: Direction = this.cmp.direction();\r\n          // Get the nextStep function according to scroll direction (forward/backward) and layout direction (LTR/RTL)\r\n          this.nextStep = this.horizontalScrollStepFunc[dir][this.scrollDirection];\r\n        });\r\n      });\r\n    } else {\r\n      // Get the nextStep function according to scroll direction (forward/backward)\r\n      this.nextStep = this.scrollStepFunc[this.scrollDirection];\r\n    }\r\n  }\r\n\r\n  private firstScrollStep(): Observable<void> {\r\n    const value: number = this.nextStep(this.scrollBy, this.control.viewportScrollOffset, this.control.viewportScrollMax);\r\n    return this.control.scrollTo(value, this.firstClickDuration);\r\n  }\r\n\r\n  private onGoingScrollStep(): void {\r\n    const scrollMax: number = this.control.viewportScrollMax;\r\n    const value: number = this.nextStep(this.onGoingScrollBy, this.control.viewportScrollOffset, scrollMax);\r\n    this.control.instantScrollTo(value, scrollMax);\r\n  }\r\n\r\n  private onOngoingPointerdown(): Observable<PointerEvent> {\r\n    return interval(0, animationFrameScheduler).pipe(\r\n      takeWhile(() => this.canScroll(this.control.viewportScrollOffset, this.control.viewportScrollMax)),\r\n      tap(() => this.onGoingScrollStep())\r\n    ) as Observable<PointerEvent>;\r\n  }\r\n}\r\n","<div class=\"ng-scrollbar-button-icon\">\r\n  <svg viewBox=\"0 0 512 512\"\r\n       xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path\r\n      d=\"M413.1,327.3l-1.8-2.1l-136-156.5c-4.6-5.3-11.5-8.6-19.2-8.6c-7.7,0-14.6,3.4-19.2,8.6L101,324.9l-2.3,2.6  C97,330,96,333,96,336.2c0,8.7,7.4,15.8,16.6,15.8v0h286.8v0c9.2,0,16.6-7.1,16.6-15.8C416,332.9,414.9,329.8,413.1,327.3z\"/>\r\n  </svg>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, effect, inject } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { fromPromise } from 'rxjs/internal/observable/innerFrom';\r\nimport { TrackXDirective, TrackYDirective } from '../track/track';\r\nimport { ThumbXDirective, ThumbYDirective } from '../thumb/thumb';\r\nimport { SCROLLBAR_CONTROL, ScrollbarAdapter } from './scrollbar-adapter';\r\nimport { ScrollbarButton } from '../button/scrollbar-button.component';\r\nimport { ScrollbarManager } from '../utils/scrollbar-manager';\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'scrollbar-y',\r\n  template: `\r\n    <div class=\"ng-scrollbar-sticky\"\r\n         [class.ng-scrollbar-hover]=\"cmp.hoverOffset()\">\r\n      <div class=\"ng-scrollbar-track-wrapper\"\r\n           [class.ng-scrollbar-hover]=\"!cmp.hoverOffset()\">\r\n        <div scrollbarTrackY class=\"ng-scrollbar-track {{ cmp.trackClass }}\">\r\n          <div scrollbarThumbY class=\"ng-scrollbar-thumb {{ cmp.thumbClass }}\"></div>\r\n        </div>\r\n        @if (cmp.buttons()) {\r\n          <button class=\"ng-scrollbar-button {{ cmp.buttonClass }}\"\r\n                  scrollbarButton=\"top\"\r\n                  scrollDirection=\"backward\"></button>\r\n          <button class=\"ng-scrollbar-button {{ cmp.buttonClass }}\"\r\n                  scrollbarButton=\"bottom\"\r\n                  scrollDirection=\"forward\"></button>\r\n        }\r\n      </div>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./shared.scss', './vertical.scss'],\r\n  imports: [TrackYDirective, ThumbYDirective, ScrollbarButton],\r\n  providers: [\r\n    { provide: SCROLLBAR_CONTROL, useExisting: ScrollbarY }\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ScrollbarY extends ScrollbarAdapter {\r\n\r\n  readonly clientRectProperty: 'left' | 'top' = 'top';\r\n\r\n  readonly sizeProperty: 'offsetWidth' | 'offsetHeight' = 'offsetHeight';\r\n\r\n  readonly clientProperty: 'clientX' | 'clientY' = 'clientY';\r\n\r\n  readonly offsetProperty: 'offsetX' | 'offsetY' = 'offsetY';\r\n\r\n  readonly axis: 'x' | 'y' = 'y';\r\n\r\n  get viewportScrollMax(): number {\r\n    return this.cmp.viewport.scrollMaxY;\r\n  }\r\n\r\n  get viewportScrollOffset(): number {\r\n    return this.cmp.viewport.scrollTop;\r\n  }\r\n\r\n  scrollTo(top: number, duration: number): Observable<void> {\r\n    return fromPromise(this.cmp.scrollTo({ top, duration }));\r\n  }\r\n\r\n  instantScrollTo(value: number): void {\r\n    this.cmp.viewport.scrollYTo(value);\r\n  }\r\n}\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'scrollbar-x',\r\n  host: { '[attr.dir]': 'cmp.direction()' },\r\n  template: `\r\n    <div class=\"ng-scrollbar-sticky\"\r\n         [class.ng-scrollbar-hover]=\"cmp.hoverOffset()\">\r\n      <div class=\"ng-scrollbar-track-wrapper\"\r\n           [class.ng-scrollbar-hover]=\"!cmp.hoverOffset()\">\r\n        <div scrollbarTrackX class=\"ng-scrollbar-track {{ cmp.trackClass }}\">\r\n          <div scrollbarThumbX class=\"ng-scrollbar-thumb {{ cmp.thumbClass }}\"></div>\r\n        </div>\r\n        @if (cmp.buttons()) {\r\n          <button class=\"ng-scrollbar-button {{ cmp.buttonClass }}\"\r\n                  scrollbarButton=\"start\"\r\n                  scrollDirection=\"backward\"></button>\r\n          <button class=\"ng-scrollbar-button {{ cmp.buttonClass }}\"\r\n                  scrollbarButton=\"end\"\r\n                  scrollDirection=\"forward\"></button>\r\n        }\r\n      </div>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./shared.scss', './horizontal.scss'],\r\n  imports: [TrackXDirective, ThumbXDirective, ScrollbarButton],\r\n  providers: [\r\n    { provide: SCROLLBAR_CONTROL, useExisting: ScrollbarX }\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ScrollbarX extends ScrollbarAdapter {\r\n\r\n  readonly manager: ScrollbarManager = inject(ScrollbarManager);\r\n\r\n  readonly clientRectProperty: 'left' | 'top' = 'left';\r\n\r\n  readonly sizeProperty: 'offsetWidth' | 'offsetHeight' = 'offsetWidth';\r\n\r\n  readonly clientProperty: 'clientX' | 'clientY' = 'clientX';\r\n\r\n  readonly offsetProperty: 'offsetX' | 'offsetY' = 'offsetX';\r\n\r\n  readonly axis: 'x' | 'y' = 'x';\r\n\r\n  // Handle dragging position (Support LTR and RTL directions for the horizontal scrollbar)\r\n  private handlePosition: (value: number, scrollMax: number) => number;\r\n\r\n  get viewportScrollMax(): number {\r\n    return this.cmp.viewport.scrollMaxX;\r\n  }\r\n\r\n  get viewportScrollOffset(): number {\r\n    // Keep scrollLeft value positive for horizontal scrollbar\r\n    return Math.abs(this.cmp.viewport.scrollLeft);\r\n  }\r\n\r\n  constructor() {\r\n    effect(() => {\r\n      if (this.cmp.direction() === 'rtl') {\r\n        this.handlePosition = (position: number, scrollMax: number): number => -(scrollMax - position);\r\n      } else {\r\n        this.handlePosition = (position: number): number => position;\r\n      }\r\n    });\r\n    super();\r\n  }\r\n\r\n  scrollTo(left: number, duration: number): Observable<void> {\r\n    return fromPromise(this.cmp.scrollTo({ left, duration }));\r\n  }\r\n\r\n  instantScrollTo(value: number, scrollMax?: number): void {\r\n    this.cmp.viewport.scrollXTo(this.handlePosition(value, scrollMax));\r\n  }\r\n}\r\n","import { Component, inject, ChangeDetectionStrategy } from '@angular/core';\r\nimport { ScrollbarX, ScrollbarY } from '../scrollbar/scrollbar';\r\nimport { NG_SCROLLBAR, _NgScrollbar } from '../utils/scrollbar-base';\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'scrollbars',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [ScrollbarX, ScrollbarY],\r\n  template: `\r\n    @if (cmp.verticalUsed()) {\r\n      <scrollbar-y/>\r\n    }\r\n    @if (cmp.horizontalUsed()) {\r\n      <scrollbar-x/>\r\n    }\r\n  `,\r\n  styles: [`\r\n    :host {\r\n      display: contents;\r\n    }\r\n  `]\r\n})\r\nexport class Scrollbars {\r\n  cmp: _NgScrollbar = inject(NG_SCROLLBAR);\r\n}\r\n","import { Component, ViewChild, OnInit, ElementRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { ScrollViewport } from './viewport';\r\nimport { NgScrollbarCore } from './ng-scrollbar-core';\r\nimport { NG_SCROLLBAR } from './utils/scrollbar-base';\r\nimport { Scrollbars } from './scrollbars/scrollbars';\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'ng-scrollbar:not([externalViewport])',\r\n  exportAs: 'ngScrollbar',\r\n  imports: [Scrollbars],\r\n  hostDirectives: [ScrollViewport],\r\n  template: `\r\n    <div #contentWrapper>\r\n      <ng-content/>\r\n      <scrollbars/>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./ng-scrollbar.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    { provide: NG_SCROLLBAR, useExisting: NgScrollbar }\r\n  ]\r\n})\r\nexport class NgScrollbar extends NgScrollbarCore implements OnInit {\r\n\r\n  @ViewChild('contentWrapper', { static: true }) contentWrapper: ElementRef<HTMLElement>;\r\n\r\n  @ViewChild(Scrollbars, { static: true }) _scrollbars: Scrollbars;\r\n\r\n  override ngOnInit(): void {\r\n    this.viewport.init(this.nativeElement, this.contentWrapper.nativeElement);\r\n    super.ngOnInit();\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ContentChild,\r\n  inject,\r\n  createComponent,\r\n  booleanAttribute,\r\n  OnInit,\r\n  Injector,\r\n  Renderer2,\r\n  ComponentRef,\r\n  ApplicationRef,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { ScrollViewport } from './viewport';\r\nimport { NgScrollbar } from './ng-scrollbar';\r\nimport { NgScrollbarCore } from './ng-scrollbar-core';\r\nimport { NG_SCROLLBAR } from './utils/scrollbar-base';\r\nimport { Scrollbars } from './scrollbars/scrollbars';\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'ng-scrollbar[externalViewport]',\r\n  exportAs: 'ngScrollbar',\r\n  template: '<ng-content/>',\r\n  styleUrls: ['ng-scrollbar.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    // This component appends a content wrapper element to the viewport\r\n    // A hydration mismatch error will be thrown (NG0500) during DOM manipulation.\r\n    // To avoid this error, the 'ngSkipHydration' attribute is added to skip hydration.\r\n    ngSkipHydration: 'true',\r\n    '[class.ng-scrollbar-external-viewport]': 'true'\r\n  },\r\n  providers: [\r\n    { provide: NG_SCROLLBAR, useExisting: NgScrollbarExt },\r\n    { provide: NgScrollbarCore, useExisting: NgScrollbar }\r\n  ],\r\n})\r\nexport class NgScrollbarExt extends NgScrollbarCore implements OnInit {\r\n\r\n  private readonly renderer: Renderer2 = inject(Renderer2);\r\n\r\n  private readonly appRef: ApplicationRef = inject(ApplicationRef);\r\n\r\n  _scrollbars: Scrollbars;\r\n\r\n  /**\r\n   * Selector used to query the viewport element.\r\n   */\r\n  @Input() externalViewport: string;\r\n\r\n  /**\r\n   * Selector used to query the content wrapper element.\r\n   */\r\n  @Input() externalContentWrapper: string;\r\n\r\n  /**\r\n   * Selector used to query the spacer element (virtual scroll integration).\r\n   * In the case of integrating the scrollbar with a virtual scroll component,\r\n   * a spacer element is typically created to match the real size of the content.\r\n   * The scrollbar will use the size of this spacer element for calculations instead of the content wrapper size.\r\n   */\r\n  @Input() externalSpacer: string;\r\n\r\n  /**\r\n   * Skip initializing the viewport and the scrollbar\r\n   * this is used when the component needs to wait for 3rd party library to render\r\n   */\r\n  @Input({ transform: booleanAttribute }) skipInit: boolean;\r\n\r\n  /**\r\n   * Reference to the external viewport directive if used\r\n   */\r\n  @ContentChild(ScrollViewport, { static: true }) customViewport: ScrollViewport;\r\n\r\n  override ngOnInit(): void {\r\n    if (!this.skipInit) {\r\n      this.detectExternalSelectors();\r\n    }\r\n    super.ngOnInit();\r\n  }\r\n\r\n  private detectExternalSelectors(): void {\r\n    let viewportElement: HTMLElement;\r\n    if (this.customViewport) {\r\n      viewportElement = this.customViewport.nativeElement;\r\n    } else {\r\n      // If viewport selector was defined, query the element\r\n      if (this.externalViewport) {\r\n        viewportElement = this.nativeElement.querySelector(this.externalViewport);\r\n      }\r\n      if (!viewportElement) {\r\n        console.error(`[NgScrollbar]: Could not find the viewport element for the provided selector \"${ this.externalViewport }\"`);\r\n        return;\r\n      }\r\n    }\r\n\r\n    // If an external spacer selector is provided, attempt to query for it\r\n    let spacerElement: HTMLElement;\r\n    if (this.externalSpacer) {\r\n      spacerElement = this.nativeElement.querySelector(this.externalSpacer);\r\n      if (!spacerElement) {\r\n        console.error(`[NgScrollbar]: Spacer element not found for the provided selector \"${ this.externalSpacer }\"`);\r\n        return;\r\n      }\r\n    }\r\n\r\n    // If an external content wrapper selector is provided, attempt to query for it\r\n    let contentWrapperElement: HTMLElement;\r\n    if (this.externalContentWrapper && !this.skipInit) {\r\n      contentWrapperElement = this.nativeElement.querySelector(this.externalContentWrapper);\r\n      if (!contentWrapperElement) {\r\n        console.error(`[NgScrollbar]: Content wrapper element not found for the provided selector \"${ this.externalContentWrapper }\"`);\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Make sure viewport element is defined to proceed\r\n    if (viewportElement) {\r\n      // If no external spacer or content wrapper is provided, create a content wrapper element\r\n      if (!this.externalSpacer && !this.externalContentWrapper) {\r\n        contentWrapperElement = this.renderer.createElement('div');\r\n\r\n        // Move all content of the viewport into the content wrapper\r\n        const childNodes: ChildNode[] = Array.from(viewportElement.childNodes);\r\n        childNodes.forEach((node: ChildNode) => this.renderer.appendChild(contentWrapperElement, node));\r\n\r\n        // Append the content wrapper to the viewport\r\n        this.renderer.appendChild(viewportElement, contentWrapperElement);\r\n      }\r\n\r\n      // Make sure content wrapper element is defined to proceed\r\n      if (contentWrapperElement) {\r\n        // Initialize viewport\r\n        this.viewport.init(viewportElement, contentWrapperElement, spacerElement);\r\n        // Attach scrollbars\r\n        this.attachScrollbars();\r\n      }\r\n    }\r\n  }\r\n\r\n  attachScrollbars(): void {\r\n    // Create the scrollbars component\r\n    const scrollbarsRef: ComponentRef<Scrollbars> = createComponent(Scrollbars, {\r\n      environmentInjector: this.appRef.injector,\r\n      elementInjector: Injector.create({ providers: [{ provide: NG_SCROLLBAR, useValue: this }] })\r\n    });\r\n    // Attach scrollbar to the content wrapper\r\n    this.viewport.contentWrapperElement.appendChild(scrollbarsRef.location.nativeElement);\r\n    // Attach the host view of the component to the main change detection tree, so that its lifecycle hooks run.\r\n    this.appRef.attachView(scrollbarsRef.hostView);\r\n    // Set the scrollbars instance\r\n    this._scrollbars = scrollbarsRef.instance;\r\n  }\r\n}\r\n","import { Directive, Input, inject, OnInit, OnDestroy, NgZone } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { NgScrollbarExt } from './ng-scrollbar-ext';\r\nimport { mutationObserver } from './viewport';\r\n\r\n@Directive({\r\n  standalone: true,\r\n  selector: 'ng-scrollbar[externalViewport][asyncDetection]'\r\n})\r\nexport class AsyncDetection implements OnInit, OnDestroy {\r\n\r\n  private readonly scrollbar: NgScrollbarExt = inject(NgScrollbarExt);\r\n  private readonly zone: NgZone = inject(NgZone);\r\n\r\n  private subscription: Subscription;\r\n\r\n  @Input() asyncDetection: 'auto' | '';\r\n\r\n  constructor() {\r\n    this.scrollbar.skipInit = true;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.zone.runOutsideAngular(() => {\r\n      this.subscription = mutationObserver(this.scrollbar.nativeElement, 100).subscribe(() => {\r\n        if (!this.scrollbar.viewport.initialized()) {\r\n          // Search for external viewport\r\n          const viewportElement: HTMLElement = this.scrollbar.nativeElement.querySelector(this.scrollbar.externalViewport);\r\n\r\n          // Search for external content wrapper\r\n          const contentWrapperElement: HTMLElement = this.scrollbar.nativeElement.querySelector(this.scrollbar.externalContentWrapper);\r\n\r\n          if (viewportElement && contentWrapperElement) {\r\n            // If an external spacer selector is provided, search for it\r\n            let spacerElement: HTMLElement;\r\n            if (this.scrollbar.externalSpacer) {\r\n              spacerElement = this.scrollbar.nativeElement.querySelector(this.scrollbar.externalSpacer);\r\n            }\r\n\r\n            // Initialize viewport\r\n            this.scrollbar.viewport.init(viewportElement, contentWrapperElement, spacerElement);\r\n            // Attach scrollbars\r\n            this.scrollbar.attachScrollbars();\r\n\r\n            if (!this.asyncDetection) {\r\n              this.subscription.unsubscribe();\r\n            }\r\n          }\r\n        } else {\r\n          const viewportElement: HTMLElement = this.scrollbar.nativeElement.querySelector(this.scrollbar.externalViewport);\r\n          const contentWrapperElement: HTMLElement = this.scrollbar.nativeElement.querySelector(this.scrollbar.externalContentWrapper);\r\n\r\n          if (!viewportElement || !contentWrapperElement) {\r\n            this.scrollbar.viewport.nativeElement = null;\r\n            this.scrollbar.viewport.contentWrapperElement = null;\r\n            this.scrollbar.viewport.initialized.set(false);\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription?.unsubscribe();\r\n  }\r\n}\r\n","import { NgModule, Provider } from '@angular/core';\r\nimport { NgScrollbar } from './ng-scrollbar';\r\nimport { ScrollViewport } from './viewport';\r\nimport { NgScrollbarExt } from './ng-scrollbar-ext';\r\nimport { NG_SCROLLBAR_OPTIONS, NG_SCROLLBAR_POLYFILL, NgScrollbarOptions } from './ng-scrollbar.model';\r\nimport { AsyncDetection } from './async-detection';\r\n\r\n@NgModule({\r\n  imports: [\r\n    NgScrollbar,\r\n    ScrollViewport,\r\n    NgScrollbarExt,\r\n    AsyncDetection\r\n  ],\r\n  exports: [\r\n    NgScrollbar,\r\n    ScrollViewport,\r\n    NgScrollbarExt,\r\n    AsyncDetection\r\n  ]\r\n})\r\nexport class NgScrollbarModule {\r\n}\r\n\r\nexport function provideScrollbarOptions(options: NgScrollbarOptions): Provider[]  {\r\n  return [\r\n    {\r\n      provide: NG_SCROLLBAR_OPTIONS,\r\n      useValue: options\r\n    }\r\n  ]\r\n}\r\n\r\nexport function provideScrollbarPolyfill(url: string): Provider[]  {\r\n  return [\r\n    {\r\n      provide: NG_SCROLLBAR_POLYFILL,\r\n      useValue: url\r\n    }\r\n  ]\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.ScrollViewport"],"mappings":"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"}