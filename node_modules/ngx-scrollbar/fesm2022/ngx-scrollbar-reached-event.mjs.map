{"version":3,"file":"ngx-scrollbar-reached-event.mjs","sources":["../../../projects/ngx-scrollbar/reached-event/src/reached-dropped-base.ts","../../../projects/ngx-scrollbar/reached-event/src/ng-scroll-reached.ts","../../../projects/ngx-scrollbar/reached-event/src/ng-scroll-dropped.ts","../../../projects/ngx-scrollbar/reached-event/src/ngx-scrollbar-reached-event.ts"],"sourcesContent":["import {\r\n  Directive,\r\n  inject,\r\n  effect,\r\n  runInInjectionContext,\r\n  OnInit,\r\n  OnDestroy,\r\n  NgZone,\r\n  Injector,\r\n  Renderer2,\r\n  EventEmitter,\r\n  PLATFORM_ID,\r\n  InputSignalWithTransform\r\n} from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\nimport { _NgScrollbar, NG_SCROLLBAR } from 'ngx-scrollbar';\r\n\r\ntype EventAction = {\r\n  emit: () => void;\r\n}\r\n\r\n@Directive()\r\nexport abstract class ReachedDroppedBase implements OnInit, OnDestroy {\r\n\r\n  protected readonly isBrowser: boolean = isPlatformBrowser(inject(PLATFORM_ID));\r\n\r\n  protected readonly zone: NgZone = inject(NgZone);\r\n\r\n  protected readonly renderer: Renderer2 = inject(Renderer2);\r\n\r\n  protected readonly injector: Injector = inject(Injector);\r\n\r\n  protected readonly scrollbar: _NgScrollbar = inject(NG_SCROLLBAR);\r\n\r\n  /** An array that contains all trigger elements  **/\r\n  protected triggerElements: HTMLElement[] = [];\r\n\r\n  /** The intersection observer reference */\r\n  protected intersectionObserver: IntersectionObserver;\r\n\r\n  /** An array that contains the chosen outputs */\r\n  protected subscribedEvents: string[] = [];\r\n\r\n  /** The wrapper element that contains the trigger elements */\r\n  protected triggerElementsWrapper: HTMLElement;\r\n\r\n  /** The wrapper element class name */\r\n  protected abstract triggerElementsWrapperClass: string;\r\n\r\n  /** The trigger element class name */\r\n  protected abstract triggerElementClass: string;\r\n\r\n  abstract disabled: InputSignalWithTransform<boolean, string | boolean>;\r\n\r\n  abstract top: EventEmitter<void>;\r\n\r\n  abstract bottom: EventEmitter<void>;\r\n\r\n  abstract start: EventEmitter<void>;\r\n\r\n  abstract end: EventEmitter<void>;\r\n\r\n  protected abstract isTriggered(entry: IntersectionObserverEntry): boolean;\r\n\r\n  /** A mapper function to ease forwarding the intersected element to its proper output */\r\n  readonly eventActions: Record<string, EventAction> = {\r\n    top: { emit: (): void => this.scrollbar.isVerticallyScrollable() ? this.top.emit() : null },\r\n    bottom: { emit: (): void => this.scrollbar.isVerticallyScrollable() ? this.bottom.emit() : null },\r\n    start: { emit: (): void => this.scrollbar.isHorizontallyScrollable() ? this.start.emit() : null },\r\n    end: { emit: (): void => this.scrollbar.isHorizontallyScrollable() ? this.end.emit() : null }\r\n  };\r\n\r\n  private onAction(trigger: string): void {\r\n    if (trigger) {\r\n      this.eventActions[trigger]?.emit();\r\n    }\r\n  }\r\n\r\n  protected setCssVariable(property: string, value: number): void {\r\n    if (value) {\r\n      this.scrollbar.nativeElement.style.setProperty(property, `${ value }px`);\r\n    }\r\n  }\r\n\r\n  private activate(): void {\r\n    this.zone.runOutsideAngular(() => {\r\n      // Create the scrollbars element inside the viewport\r\n      this.triggerElementsWrapper = this.renderer.createElement('div');\r\n      this.renderer.addClass(this.triggerElementsWrapper, this.triggerElementsWrapperClass);\r\n      this.renderer.appendChild(this.scrollbar.viewport.contentWrapperElement, this.triggerElementsWrapper);\r\n\r\n      // Create a trigger element for each subscribed event\r\n      this.subscribedEvents.forEach((event: string) => {\r\n        const triggerElement: HTMLElement = this.renderer.createElement('div');\r\n        this.renderer.addClass(triggerElement, this.triggerElementClass);\r\n        this.renderer.setAttribute(triggerElement, 'trigger', event);\r\n        this.renderer.appendChild(this.triggerElementsWrapper, triggerElement);\r\n        this.triggerElements.push(triggerElement);\r\n      });\r\n\r\n      // The first time the observer is triggered as soon as the element is observed,\r\n      // This flag is used to ignore this first trigger\r\n      let intersectionObserverInit: boolean = false;\r\n\r\n      this.intersectionObserver = new IntersectionObserver((entries: IntersectionObserverEntry[]) => {\r\n        if (intersectionObserverInit) {\r\n          entries.forEach((entry: IntersectionObserverEntry) => {\r\n            if (this.isTriggered(entry)) {\r\n              // Forward the detected trigger element only after the observer is initialized\r\n              // Only observe the trigger elements when scrollable\r\n              this.zone.run(() => this.onAction(entry.target.getAttribute('trigger')));\r\n            }\r\n          });\r\n        } else {\r\n          // Once the initial element is detected set a flag to true\r\n          intersectionObserverInit = true;\r\n        }\r\n      }, {\r\n        root: this.scrollbar.viewport.nativeElement,\r\n      });\r\n\r\n      this.triggerElements.forEach((el: HTMLElement) => this.intersectionObserver.observe(el));\r\n    });\r\n  }\r\n\r\n  private deactivate(): void {\r\n    this.intersectionObserver?.disconnect();\r\n    this.triggerElementsWrapper?.remove();\r\n    this.triggerElements = [];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.top.observed) {\r\n      this.subscribedEvents.push('top');\r\n    }\r\n    if (this.bottom.observed) {\r\n      this.subscribedEvents.push('bottom');\r\n    }\r\n    if (this.start.observed) {\r\n      this.subscribedEvents.push('start');\r\n    }\r\n    if (this.end.observed) {\r\n      this.subscribedEvents.push('end');\r\n    }\r\n\r\n    runInInjectionContext(this.injector, () => {\r\n      effect(() => {\r\n        if (this.disabled()) {\r\n          this.deactivate();\r\n        } else {\r\n          if (this.isBrowser) {\r\n            this.activate();\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.deactivate();\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Input,\r\n  Output,\r\n  numberAttribute,\r\n  booleanAttribute,\r\n  input,\r\n  EventEmitter,\r\n  InputSignalWithTransform\r\n} from '@angular/core';\r\nimport { ReachedDroppedBase } from './reached-dropped-base';\r\n\r\n@Directive({\r\n  selector: 'ng-scrollbar[reachedTop], ng-scrollbar[reachedBottom], ng-scrollbar[reachedStart], ng-scrollbar[reachedEnd]',\r\n  standalone: true,\r\n})\r\nexport class NgScrollReached extends ReachedDroppedBase {\r\n\r\n  /** Reached offset value in px */\r\n  @Input({ alias: 'reachedOffset', transform: numberAttribute }) set offsetSetter(value: number) {\r\n    this.setCssVariable('--reached-offset', value);\r\n  }\r\n\r\n  @Input({ alias: 'reachedTopOffset', transform: numberAttribute }) set offsetTopSetter(value: number) {\r\n    this.setCssVariable('--reached-offset-top', value);\r\n  }\r\n\r\n  @Input({ alias: 'reachedBottomOffset', transform: numberAttribute }) set offsetBottomSetter(value: number) {\r\n    this.setCssVariable('--reached-offset-bottom', value);\r\n  }\r\n\r\n  @Input({ alias: 'reachedStartOffset', transform: numberAttribute }) set offsetStartSetter(value: number) {\r\n    this.setCssVariable('--reached-offset-start', value);\r\n  }\r\n\r\n  @Input({ alias: 'reachedEndOffset', transform: numberAttribute }) set offsetEndSetter(value: number) {\r\n    this.setCssVariable('--reached-offset-end', value);\r\n  }\r\n\r\n  disabled: InputSignalWithTransform<boolean, string | boolean> = input<boolean, string | boolean>(false, {\r\n    alias: 'disableReached',\r\n    transform: booleanAttribute\r\n  });\r\n\r\n  @Output('reachedTop') top: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  @Output('reachedBottom') bottom: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  @Output('reachedStart') start: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  @Output('reachedEnd') end: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  protected triggerElementsWrapperClass: string = 'ng-scroll-reached-wrapper';\r\n\r\n  protected triggerElementClass: string = 'scroll-reached-trigger-element';\r\n\r\n  protected isTriggered(entry: IntersectionObserverEntry): boolean {\r\n    return entry.isIntersecting;\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Input,\r\n  Output,\r\n  numberAttribute,\r\n  booleanAttribute,\r\n  input,\r\n  EventEmitter,\r\n  InputSignalWithTransform\r\n} from '@angular/core';\r\nimport { ReachedDroppedBase } from './reached-dropped-base';\r\n\r\n@Directive({\r\n  selector: 'ng-scrollbar[droppedTop], ng-scrollbar[droppedBottom], ng-scrollbar[droppedStart], ng-scrollbar[droppedEnd]',\r\n  standalone: true,\r\n})\r\nexport class NgScrollDropped extends ReachedDroppedBase {\r\n\r\n  /** Dropped offset value in px */\r\n  @Input({ alias: 'droppedOffset', transform: numberAttribute }) set offsetSetter(value: number) {\r\n    this.setCssVariable('--dropped-offset', value);\r\n  }\r\n\r\n  @Input({ alias: 'droppedTopOffset', transform: numberAttribute }) set offsetTopSetter(value: number) {\r\n    this.setCssVariable('--dropped-offset-top', value);\r\n  }\r\n\r\n  @Input({ alias: 'droppedBottomOffset', transform: numberAttribute }) set offsetBottomSetter(value: number) {\r\n    this.setCssVariable('--dropped-offset-bottom', value);\r\n  }\r\n\r\n  @Input({ alias: 'droppedStartOffset', transform: numberAttribute }) set offsetStartSetter(value: number) {\r\n    this.setCssVariable('--dropped-offset-start', value);\r\n  }\r\n\r\n  @Input({ alias: 'droppedEndOffset', transform: numberAttribute }) set offsetEndSetter(value: number) {\r\n    this.setCssVariable('--dropped-offset-end', value);\r\n  }\r\n\r\n  disabled: InputSignalWithTransform<boolean, string | boolean> = input<boolean, string | boolean>(false, {\r\n    alias: 'disableDropped',\r\n    transform: booleanAttribute\r\n  });\r\n\r\n  @Output('droppedTop') top: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  @Output('droppedBottom') bottom: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  @Output('droppedStart') start: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  @Output('droppedEnd') end: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  protected triggerElementsWrapperClass: string = 'ng-scroll-dropped-wrapper';\r\n\r\n  protected triggerElementClass: string = 'scroll-dropped-trigger-element';\r\n\r\n  protected isTriggered(entry: IntersectionObserverEntry): boolean {\r\n    return !entry.isIntersecting;\r\n  }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}