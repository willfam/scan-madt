import { NgModule } from '@angular/core';
import { NgScrollbar } from './ng-scrollbar';
import { ScrollViewport } from './viewport';
import { NgScrollbarExt } from './ng-scrollbar-ext';
import { NG_SCROLLBAR_OPTIONS, NG_SCROLLBAR_POLYFILL } from './ng-scrollbar.model';
import { AsyncDetection } from './async-detection';
import * as i0 from "@angular/core";
export class NgScrollbarModule {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.2", ngImport: i0, type: NgScrollbarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "18.1.2", ngImport: i0, type: NgScrollbarModule, imports: [NgScrollbar,
            ScrollViewport,
            NgScrollbarExt,
            AsyncDetection], exports: [NgScrollbar,
            ScrollViewport,
            NgScrollbarExt,
            AsyncDetection] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "18.1.2", ngImport: i0, type: NgScrollbarModule }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.2", ngImport: i0, type: NgScrollbarModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        NgScrollbar,
                        ScrollViewport,
                        NgScrollbarExt,
                        AsyncDetection
                    ],
                    exports: [
                        NgScrollbar,
                        ScrollViewport,
                        NgScrollbarExt,
                        AsyncDetection
                    ]
                }]
        }] });
export function provideScrollbarOptions(options) {
    return [
        {
            provide: NG_SCROLLBAR_OPTIONS,
            useValue: options
        }
    ];
}
export function provideScrollbarPolyfill(url) {
    return [
        {
            provide: NG_SCROLLBAR_POLYFILL,
            useValue: url
        }
    ];
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctc2Nyb2xsYmFyLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1zY3JvbGxiYXIvc3JjL2xpYi9uZy1zY3JvbGxiYXIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQVksTUFBTSxlQUFlLENBQUM7QUFDbkQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDNUMsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3BELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxxQkFBcUIsRUFBc0IsTUFBTSxzQkFBc0IsQ0FBQztBQUN2RyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7O0FBZ0JuRCxNQUFNLE9BQU8saUJBQWlCOzhHQUFqQixpQkFBaUI7K0dBQWpCLGlCQUFpQixZQVoxQixXQUFXO1lBQ1gsY0FBYztZQUNkLGNBQWM7WUFDZCxjQUFjLGFBR2QsV0FBVztZQUNYLGNBQWM7WUFDZCxjQUFjO1lBQ2QsY0FBYzsrR0FHTCxpQkFBaUI7OzJGQUFqQixpQkFBaUI7a0JBZDdCLFFBQVE7bUJBQUM7b0JBQ1IsT0FBTyxFQUFFO3dCQUNQLFdBQVc7d0JBQ1gsY0FBYzt3QkFDZCxjQUFjO3dCQUNkLGNBQWM7cUJBQ2Y7b0JBQ0QsT0FBTyxFQUFFO3dCQUNQLFdBQVc7d0JBQ1gsY0FBYzt3QkFDZCxjQUFjO3dCQUNkLGNBQWM7cUJBQ2Y7aUJBQ0Y7O0FBSUQsTUFBTSxVQUFVLHVCQUF1QixDQUFDLE9BQTJCO0lBQ2pFLE9BQU87UUFDTDtZQUNFLE9BQU8sRUFBRSxvQkFBb0I7WUFDN0IsUUFBUSxFQUFFLE9BQU87U0FDbEI7S0FDRixDQUFBO0FBQ0gsQ0FBQztBQUVELE1BQU0sVUFBVSx3QkFBd0IsQ0FBQyxHQUFXO0lBQ2xELE9BQU87UUFDTDtZQUNFLE9BQU8sRUFBRSxxQkFBcUI7WUFDOUIsUUFBUSxFQUFFLEdBQUc7U0FDZDtLQUNGLENBQUE7QUFDSCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIFByb3ZpZGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE5nU2Nyb2xsYmFyIH0gZnJvbSAnLi9uZy1zY3JvbGxiYXInO1xyXG5pbXBvcnQgeyBTY3JvbGxWaWV3cG9ydCB9IGZyb20gJy4vdmlld3BvcnQnO1xyXG5pbXBvcnQgeyBOZ1Njcm9sbGJhckV4dCB9IGZyb20gJy4vbmctc2Nyb2xsYmFyLWV4dCc7XHJcbmltcG9ydCB7IE5HX1NDUk9MTEJBUl9PUFRJT05TLCBOR19TQ1JPTExCQVJfUE9MWUZJTEwsIE5nU2Nyb2xsYmFyT3B0aW9ucyB9IGZyb20gJy4vbmctc2Nyb2xsYmFyLm1vZGVsJztcclxuaW1wb3J0IHsgQXN5bmNEZXRlY3Rpb24gfSBmcm9tICcuL2FzeW5jLWRldGVjdGlvbic7XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGltcG9ydHM6IFtcclxuICAgIE5nU2Nyb2xsYmFyLFxyXG4gICAgU2Nyb2xsVmlld3BvcnQsXHJcbiAgICBOZ1Njcm9sbGJhckV4dCxcclxuICAgIEFzeW5jRGV0ZWN0aW9uXHJcbiAgXSxcclxuICBleHBvcnRzOiBbXHJcbiAgICBOZ1Njcm9sbGJhcixcclxuICAgIFNjcm9sbFZpZXdwb3J0LFxyXG4gICAgTmdTY3JvbGxiYXJFeHQsXHJcbiAgICBBc3luY0RldGVjdGlvblxyXG4gIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIE5nU2Nyb2xsYmFyTW9kdWxlIHtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHByb3ZpZGVTY3JvbGxiYXJPcHRpb25zKG9wdGlvbnM6IE5nU2Nyb2xsYmFyT3B0aW9ucyk6IFByb3ZpZGVyW10gIHtcclxuICByZXR1cm4gW1xyXG4gICAge1xyXG4gICAgICBwcm92aWRlOiBOR19TQ1JPTExCQVJfT1BUSU9OUyxcclxuICAgICAgdXNlVmFsdWU6IG9wdGlvbnNcclxuICAgIH1cclxuICBdXHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBwcm92aWRlU2Nyb2xsYmFyUG9seWZpbGwodXJsOiBzdHJpbmcpOiBQcm92aWRlcltdICB7XHJcbiAgcmV0dXJuIFtcclxuICAgIHtcclxuICAgICAgcHJvdmlkZTogTkdfU0NST0xMQkFSX1BPTFlGSUxMLFxyXG4gICAgICB1c2VWYWx1ZTogdXJsXHJcbiAgICB9XHJcbiAgXVxyXG59XHJcbiJdfQ==